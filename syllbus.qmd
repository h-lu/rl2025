---
title: "课程大纲"
---

# 课程概述

本课程为经管学生设计，旨在弱化数学理论和公式，侧重强化学习的实战应用，并结合 AI 辅助编程。课程共计 16 周，每周两次课，每次 90 分钟。课程以项目为中心，贯穿始终。

## 课程目标

完成本课程后，学生将能够：

*   **理解核心概念:** 解释强化学习的核心概念，并区分其与监督学习和无监督学习的不同。
*   **掌握编程工具:** 熟练使用 GitHub Copilot, Tabnine 等 AI 辅助编程工具，以及 Gymnasium, Stable Baselines3 等 Python 库进行强化学习编程。
*   **应用经典算法:** 运用 Q-Learning, DQN, PPO 等经典强化学习算法，解决至少两种不同类型的商业问题 (例如：动态定价、推荐系统)。
*   **团队协作:** 有效地进行团队合作，完成五个具有实际商业应用价值的强化学习小组项目，并撰写项目报告。

## 课程结构

课程分为四个阶段，循序渐进地引导学生从理论到实践，最终完成小组项目，并拓展到更广泛的商业应用场景和伦理考量。

*   **阶段一 (1-2周): 强化学习入门**
    *   目标：理解基本概念，体验简单环境。
*   **阶段二 (3-8周): 经典算法实践**
    *   目标：掌握 Q-Learning 和深度 Q 网络 (DQN) 算法，解决中等难度问题。
*   **阶段三 (9-13周): 高级算法探索**
    *   目标：了解策略梯度方法，尝试更复杂的环境和算法。
*   **阶段四 (14-16周): 小组项目实战与商业应用拓展**
    *   目标：团队合作，应用强化学习解决实际商业问题，并拓展到更广泛的商业应用场景和伦理考量。

## 每周课程安排

以下是详细的每周课程内容和项目安排，每次课程 90 分钟。

### 第一阶段 (1-2周): 强化学习入门

#### 第1周 (共2次课)

*   **第一次课: 什么是强化学习？**
    *   内容：
        *   讲解强化学习的核心概念：智能体 (Agent)、环境 (Environment)、动作 (Action)、状态 (State)、奖励 (Reward)。
        *   对比强化学习与监督学习、无监督学习。
        *   展示强化学习在商业领域的应用案例 (例如：推荐系统、动态定价、库存管理)。
*   **第二次课: AI 辅助编程入门与平衡杆 (CartPole) 初体验**
    *   内容：
        *   介绍并安装 AI 辅助编程工具 (例如：GitHub Copilot, Tabnine)。
        *   演示如何使用 AI 工具辅助编写 Python 代码，并针对平衡杆游戏 (CartPole) 进行初步的演示和代码演练。
        *   介绍强化学习常用 Python 库 (例如：Gymnasium, Stable Baselines3)，强调其易用性和对初学者的友好性。
    *   实践：
        *   引导学生使用 AI 工具和库，体验平衡杆 (CartPole) 环境。
        *   完成简单的 Python 编程练习，为后续强化学习编程打基础。

#### 第2周 (共2次课)

*   **第一次课: 强化学习框架与迷宫环境 (Grid World) 搭建**
    *   内容：
        *   解释马尔可夫决策过程 (MDP) 的基本思想 (无需深入数学细节，侧重直观理解)。
        *   讲解策略 (Policy)、价值函数 (Value Function, 包括 V 函数和 Q 函数) 的概念，强调直观理解。
        *   探讨探索 (Exploration) 与利用 (Exploitation) 的平衡问题，用商业案例 (例如：新市场尝试 vs. 现有市场深耕) 进行类比。
    *   实践：
        *   详细讲解如何使用 Gymnasium 库搭建迷宫环境 (Grid World)。
*   **第二次课: 小组项目一：迷宫寻宝 (Grid World) 环境搭建**
    *   内容：
        *   提供迷宫环境 (Grid World) 的代码框架，并指导学生使用 AI 工具进行代码补全和修改。
    *   实践：
        *   学生以小组为单位，搭建迷宫环境 (Grid World)。
    *   答疑：
        *   解答学生在环境搭建过程中遇到的问题，确保所有小组都能成功搭建迷宫环境 (Grid World)。
        *   布置小组项目一：迷宫寻宝 (Grid World) 环境搭建。

### 第二阶段 (3-8周): 经典算法实践

#### 第3周 (共2次课)

*   **第一次课: Q-Learning 算法详解**
    *   内容：
        *   直观解释 Q-Table 和 Q-Learning 的更新规则 (避免复杂的数学公式，用表格和例子说明)。
        *   梳理 Q-Learning 算法的步骤流程。
        *   结合动态定价案例，演示如何使用 Q-Learning 算法解决简单动态定价问题 (使用 AI 辅助编程)。
*   **第二次课: 小组项目一：Q-Learning 算法编程实践**
    *   实践：
        *   指导学生以小组为单位，使用 Python 和 AI 工具，编写 Q-Learning 算法代码，应用于迷宫寻宝 (Grid World) 项目。
    *   内容：
        *   讲解超参数 (学习率、折扣因子) 的作用，以及如何进行简单的参数调整 (直观理解)。
    *   检查点：
        *   小组项目一检查点：确保学生小组能够运行基本的 Q-Learning 智能体，在迷宫环境 (Grid World) 中进行探索。

#### 第4周 (共2次课)

*   **第一次课: Q-Learning 算法优化与改进 / 小组项目一提交 / 优秀小组项目一讲解 (3组)**
    *   内容：
        *   讨论 Q-Learning 算法的局限性 (例如：状态空间爆炸问题)。
        *   介绍 ε-greedy 策略等探索策略，提升智能体的探索能力。
        *   讲解 Q-Table 初始化、奖励函数设计等实用技巧，提升 Q-Learning 算法的性能。
    *   管理：
        *   小组项目一：迷宫寻宝 (Grid World) 提交 (第 4 周第一次课前)。
        *   优秀小组项目一讲解 (3 组)。
*   **第二次课: 小组项目一：Q-Learning 算法优化与问题解决**
    *   实践：
        *   学生小组继续完善 Q-Learning 算法代码，优化智能体在迷宫环境 (Grid World) 中的表现。
    *   指导：
        *   指导学生使用调试工具和 AI 工具，解决编程中遇到的问题。
    *   讨论：
        *   组织学生小组分享项目进展和遇到的问题，进行集体讨论和解答。

#### 第5周 (共2次课)

*   **第一次课: 深度学习的引入 - 深度 Q 网络 (DQN) 初探**
    *   内容：
        *   解释 Q-Learning 算法在复杂问题上的瓶颈 (状态空间爆炸)。
        *   引入深度学习 (神经网络) 的基本概念 (无需深入数学细节，强调神经网络的表示能力)。
        *   讲解深度 Q 网络 (DQN) 的基本原理，如何使用神经网络近似 Q 函数。
        *   对比 DQN 与 Q-Learning 算法的异同。
*   **第二次课: DQN 算法关键技术 - 经验回放与目标网络**
    *   内容：
        *   深入讲解 DQN 算法的两个关键技术：经验回放 (Experience Replay) 和目标网络 (Target Network) 的作用和原理。
        *   讲解如何使用经验回放和目标网络来提升 DQN 算法的稳定性和性能。
    *   代码：
        *   演示如何在 DQN 算法代码中加入经验回放和目标网络 (使用 AI 辅助编程)。

#### 第6周 (共2次课)

*   **第一次课: DQN 算法详解 / 小组项目二提交 / 优秀小组项目二讲解 (3组)**
    *   内容：
        *   梳理 DQN 算法的完整步骤流程。
        *   结合平衡杆 (CartPole) 案例，演示如何使用 DQN 算法解决平衡杆问题 (使用 AI 辅助编程)。
    *   管理：
        *   小组项目二：平衡杆 (CartPole) 提交 (第 6 周第一次课前)。
        *   优秀小组项目二讲解 (3 组)。
*   **第二次课: 小组项目二：DQN 算法编程实践**
    *   实践：
        *   指导学生以小组为单位，使用 Python 和 AI 工具，编写 DQN 算法代码，应用于平衡杆 (CartPole) 项目。
    *   内容：
        *   讲解神经网络结构设计 (层数、神经元数量) 的基本原则 (无需深入理论，强调试错和调参)。
    *   检查点：
        *   小组项目二检查点：确保学生小组能够运行基本的 DQN 智能体，在平衡杆 (CartPole) 环境中进行探索。

#### 第7周 (共2次课)

*   **第一次课: DQN 算法改进与调优**
    *   内容：
        *   讨论 DQN 算法的改进方向 (例如：Double DQN, Dueling DQN 等)。
        *   探讨不同的探索策略 (例如：ε-greedy 退火策略、Noisy Networks 等)，进一步提升智能体的探索能力。
        *   讲解 DQN 算法的调参技巧 (学习率、batch size、网络结构等)，以及如何使用 TensorBoard 等可视化工具监控训练过程。
*   **第二次课: 小组项目二：DQN 算法优化与问题解决**
    *   实践：
        *   学生小组继续完善 DQN 算法代码，优化智能体在平衡杆 (CartPole) 环境中的表现。
    *   指导：
        *   指导学生使用调试工具和 AI 工具，解决编程中遇到的问题。
    *   讨论：
        *   组织学生小组分享项目进展和遇到的问题，进行集体讨论和解答。

#### 第8周 (共2次课)

*   **第一次课: 策略梯度方法 - Policy Gradient 算法初步 / 小组项目三提交 / 优秀小组项目三讲解 (3组)**
    *   内容：
        *   介绍策略梯度 (Policy Gradient) 方法的基本思想 (直接优化策略)。
        *   讲解 Policy Gradient 算法 (例如：REINFORCE 算法) 的基本原理和流程 (无需深入数学推导，侧重直观理解)。
        *   对比策略梯度方法与价值方法 (Q-Learning, DQN) 的异同。
    *   管理：
        *   小组项目三：资源分配 模拟环境 提交 (第 8 周第一次课前)。
        *   优秀小组项目三讲解 (3 组)。
*   **第二次课: 小组项目三：Policy Gradient 算法编程实践**
    *   实践：
        *   指导学生以小组为单位，使用 Python 和 AI 工具，编写 Policy Gradient 算法代码，应用于资源分配模拟环境项目。
    *   内容：
        *   讨论策略梯度方法中的探索问题，以及如何进行有效的探索。
    *   检查点：
        *   小组项目三检查点：确保学生小组能够运行基本的 Policy Gradient 智能体，在资源分配模拟环境中进行探索。

### 第三阶段 (9-13周): 高级算法探索

#### 第9周 (共2次课)

*   **第一次课: Actor-Critic 算法 - A2C 算法详解**
    *   内容：
        *   讲解 Actor-Critic 算法的基本框架 (结合策略梯度和价值方法)。
        *   深入讲解 A2C (Advantage Actor-Critic) 算法的原理和优势 (例如：更稳定、更高效)。
    *   代码：
        *   演示 A2C 算法的代码实现 (使用 AI 辅助编程)。
*   **第二次课: 小组项目三：A2C 算法优化与改进**
    *   内容：
        *   讨论 A2C 算法的改进方向 (例如：GAE-优势函数估计)。
        *   讲解 A2C 算法的调参技巧，以及如何使用 TensorBoard 等可视化工具监控训练过程。
    *   实践：
        *   指导学生尝试改进 A2C 算法，提升算法性能。

#### 第10周 (共2次课)

*   **第一次课: 近端策略优化 (PPO) 算法 - PPO 算法详解**
    *   内容：
        *   讲解近端策略优化 (PPO) 算法的原理和优势 (例如：性能稳定、易于调参)。
        *   深入讲解 PPO 算法的核心机制：Clipping 和 PPO-Penalty。
        *   对比 PPO 算法与 A2C 算法的异同。
*   **第二次课: 小组项目三：PPO 算法编程实践**
    *   实践：
        *   指导学生以小组为单位，使用 Python 和 AI 工具，编写 PPO 算法代码，应用于资源分配模拟环境项目。
    *   内容：
        *   讲解 PPO 算法的关键超参数 (例如：clip ratio, value function coefficient 等) 的作用，以及如何进行参数调整。
    *   检查点：
        *   小组项目三检查点：确保学生小组能够运行基本的 PPO 智能体，在资源分配模拟环境中进行探索。

#### 第11周 (共2次课)

*   **第一次课: PPO 算法的改进与应用**
    *   内容：
        *   讨论 PPO 算法的改进方向 (例如：PPO-Clip, PPO-Penalty 的选择)。
        *   探讨 PPO 算法在不同商业场景中的应用案例 (例如：推荐系统、动态定价、机器人控制等)。
        *   介绍 PPO 算法的变体和前沿研究方向。
*   **第二次课: 小组项目三：PPO 算法优化与问题解决**
    *   实践：
        *   学生小组继续完善 PPO 算法代码，优化智能体在资源分配模拟环境中的表现，并尝试应用更高级的探索策略。
    *   指导：
        *   指导学生解决在更复杂算法和环境中遇到的问题。
    *   讨论：
        *   组织学生小组分享项目进展和遇到的问题，进行集体讨论和解答。

#### 第12周 (共2次课)

*   **第一次课: 强化学习前沿技术与发展趋势 / 小组项目四提交 / 优秀小组项目四讲解 (3组)**
    *   内容：
        *   介绍强化学习领域的前沿技术和发展趋势，例如：模仿学习 (Imitation Learning)、逆强化学习 (Inverse Reinforcement Learning)、分层强化学习 (Hierarchical Reinforcement Learning) 等 (简单介绍思想，激发学生兴趣)。
        *   展望强化学习未来的发展方向和潜在突破。
        *   引导学生思考强化学习技术可能对商业和社会带来的变革。
    *   管理：
        *   小组项目四：商业案例应用 提交 (第 12 周第一次课前)。
        *   优秀小组项目四讲解 (3 组)。
*   **第二次课: 小组项目四：商业案例应用 项目实践与问题解决**
    *   实践：
        *   学生小组进行小组项目四：商业案例应用 的项目实践，进行环境搭建、算法选择、代码编写和实验验证。
    *   指导：
        *   指导学生解决在项目实践中遇到的问题。
    *   讨论：
        *   鼓励学生小组之间交流项目进展和经验，互相学习，共同进步。

#### 第13周 (共2次课)

*   **第一次课: 小组项目四成果展示 / 小组综合项目布置与答疑**
    *   展示：
        *   小组项目四成果展示 (部分小组，时间允许的情况下，可以放在本次课，也可以放在第 12 周第二次课，根据实际情况灵活安排)。
    *   内容：
        *   布置小组综合项目：开放式商业问题，明确项目要求、评分标准和提交时间。
    *   答疑：
        *   针对小组综合项目进行初步答疑，解答学生关于项目选题、方向等问题。
*   **第二次课: 小组综合项目 - 开放式商业问题介绍与选题**
    *   内容：
        *   详细介绍小组综合项目：开放式商业问题，鼓励学生结合课程所学知识和技能，以及自身专业背景和兴趣，选择具有实际商业价值和应用前景的项目。
    *   指导：
        *   指导学生小组进行小组综合项目选题，鼓励创新性和个性化。
    *   分组：
        *   学生维持小组队伍，开始讨论小组综合项目选题和分工。

### 第四阶段 (14-16周): 小组项目实战与商业应用拓展

#### 第14-15周 (共4次课): 小组综合项目开发与指导

*   内容：
    *   学生以小组为单位，进行小组综合项目的设计、开发和实验。
*   指导：
    *   教师在课堂上提供项目指导和技术支持，解答学生在项目开发过程中遇到的问题。
*   协作：
    *   鼓励学生充分利用 AI 辅助编程工具，提高开发效率，加强团队协作。
*   检查：
    *   第 15 周进行小组综合项目中期检查，了解项目进展，及时发现和解决问题。

#### 第15周 (共2次课)

*   **第一次课:**  (内容待定)
*   **第二次课: 小组综合项目准备与答疑**
    *   内容：
        *   学生小组继续进行小组综合项目的开发和完善，准备项目展示材料。
    *   答疑：
        *   教师提供项目答疑和指导，帮助学生解决项目开发中遇到的最后问题。

#### 第16周 (共2次课): 小组综合项目展示与总结

*   **第一次课: 小组综合项目展示 / 小组综合项目提交 / 小组综合项目展示 (全部小组)**
    *   展示：
        *   各小组进行项目成果展示，讲解项目背景、问题定义、算法选择、实验结果和商业价值。
    *   答辩：
        *   接受教师和同学的提问和点评。
    *   管理：
        *   小组综合项目：开放式商业问题 提交 (第 16 周第一次课前)。
*   **第二次课: 课程总结与未来展望**
    *   总结：
        *   回顾课程内容，总结强化学习的核心概念、算法和应用。
    *   展望：
        *   展望强化学习在商业领域的未来发展前景，鼓励学生继续深入学习和探索。
    *   伦理讨论：
        *   探讨强化学习在商业应用中可能引发的伦理问题，例如：算法歧视、数据隐私、自动化对就业的影响等，培养学生的社会责任感和批判性思维。
    *   评估：
        *   进行课程评估和反馈，收集学生对课程的意见和建议，为课程改进提供参考。

## 项目设置 (贯穿课程)

### 小组项目 (共5个)

*   **小组项目一 (迷宫寻宝 Grid World)**
    *   学习目标：掌握 Q-Learning 算法的原理和基本实现，理解探索与利用的概念。
    *   周期：2 周
    *   提交时间：第 4 周第一次课前
*   **小组项目二 (平衡杆 CartPole)**
    *   学习目标：掌握 DQN 算法的原理和使用，理解经验回放和目标网络的作用，初步接触神经网络。
    *   周期：2 周
    *   提交时间：第 6 周第一次课前
*   **小组项目三 (资源分配 模拟环境)**
    *   学习目标：掌握策略梯度方法 (PPO) 的原理和应用，理解策略梯度与价值方法的区别，学习处理连续动作空间问题。
    *   周期：2 周
    *   提交时间：第 8 周第一次课前
*   **小组项目四 (商业案例应用)**
    *   学习目标：综合运用所学强化学习算法和工具，解决实际商业问题，提升问题建模和方案设计能力。
    *   周期：2 周
    *   提交时间：第 12 周第一次课前
*   **小组综合项目 (开放式商业问题)**
    *   学习目标：培养学生的团队合作、项目管理和实际问题解决能力，提升综合应用强化学习知识的能力。
    *   周期：3 周
    *   提交时间：第 16 周第一次课前

    *小组人数：建议每组 2-3 人。*

*   **项目形式:** 小组合作完成，包括项目方案设计、环境搭建、算法实现、实验验证、结果分析和项目报告。 每次小组项目提交后，选取 3 个优秀小组在课堂上进行项目讲解和展示，分享经验和成果。

## AI 辅助编程工具

*   **代码辅助:** GitHub Copilot, Tabnine 等
    *   功能：代码自动补全、代码片段生成、代码错误检查等，提高编程效率，降低编程难度。
*   **强化学习库:** Gymnasium (原 OpenAI Gym)
    *   功能：提供各种强化学习环境，方便学生进行算法测试和验证。
*   **算法库:** Stable Baselines3
    *   功能：封装了多种常用的强化学习算法 (Q-Learning, DQN, PPO 等)，易于使用，方便学生快速上手。
*   **可视化工具:** TensorBoard 等
    *   功能：方便学生监控强化学习训练过程，分析实验结果，调试算法。

## 考核方式

*   **小组项目一 ~ 四 (40%):**  根据项目完成质量、代码质量、实验结果和项目报告进行评分，平均分配到四个项目。
*   **小组综合项目 (20%):**  根据项目创新性、实用性、完成度、展示效果和项目报告进行评分 (小组内成员评分可以考虑组内互评和贡献度)。
*   **课堂参与 (10%):**  根据课堂讨论、提问、作业完成情况等进行评分，鼓励学生积极参与课堂互动。
*   **期末考试 (30%):**  期末考试采用闭卷形式，重点考察学生对强化学习基础理论的掌握程度。